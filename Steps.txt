The modification made:

1. fci() -> tfci():
	1. The original function is 'tpc()' from package tpc.R. 
	2. Change1: added a 'tier' parameter into the function. (869-905)
	3. (In Progress) Change2: Whether it is necessary to always use one of the conservative and 		maj.rule. (line 925-929)
	4. Change3: change the 'pdsep()' into 'tpdsep()' inside the program. (line 955)
	5. Change4: (Maybe) need a change 'pdsep()' to 'tpdsep()'. (line 975)

2. pdsep() -> tpdsep():
	1. The original function is 'pdsep()' from package pcalg.R.
	2. (In progress) Change1: Added a 'tiers' parameter as a vector. Wrote a program to guarantee
		the input of 'tiers' vector is valid. (Line 388-398)

	3. Change2: In this step. It is trying to figure out the vertices which are not in the vector 		diff.set. Create a vector named 'tiers.diff.set' as a proxy vector. Then, change the 		tier values of the non-existing vertices to NULL. (Line 461-468)

	4. Change3: The program is to skip the situation that max tier values in 'diff.set' is 			greater than the maximum between vertex X and vertex Y. (Line 507-511)

	*********(Not Sure if the change in this part is correct or Not Yet)**********
	 
	5. Change4: The 'biCC' parameter and the its related code in the function have been 			invalidated. (Line 474-488)

3. tskeleton() was the original function from the package tpc.R. Its original version was 'skeleton()' from package pcalg.R.
